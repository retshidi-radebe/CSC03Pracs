Microsoft (R) Macro Assembler Version 6.11		    08/01/24 17:07:49
src\220138825_P02.asm					     Page 1 - 1


				;	Update all of this information to reflect your own details and the prac
				;	Author:     RE Radebe
				;	Template document
				.386
				.MODEL FLAT ; Flat memory model
				.STACK 4096 ; 4096 bytes

				INCLUDE io.inc
			      C ;
			      C ; Simple I/O Routines - Version 2
			      C ;
			      C 
			      C IFNDEF IO_INC
 = 1			      C IO_INC equ <1>
			      C 
			      C OutputStr PROTO NEAR32 STDCALL :DWORD
			      C OutputInt PROTO NEAR32 STDCALL :DWORD
			      C OutputFloat PROTO NEAR32 STDCALL :DWORD
			      C OutputFloat8 PROTO NEAR32 STDCALL :QWORD
			      C InputInt PROTO NEAR32 STDCALL
			      C InputStr PROTO NEAR32 STDCALL :DWORD, :DWORD
			      C 
			      C ELSE
			      C ENDIF
			      C 

				; Exit function
				ExitProcess PROTO NEAR32 stdcall, dwExitCode:DWORD

				; The data section stores all global variables
 00000000			.DATA
				;Inputs variables and the answers
 00000000 00000000		HR0				DWORD	?
 00000004 00000000		HR1				DWORD	?
 00000008 00000000		HR2				DWORD	?
 0000000C 00000000		HR3				DWORD	?
 00000010 00000000		HR4				DWORD	?
 00000014 00000000		Avg				DWORD	?
 00000018 00000000		RoundedAvg		DWORD	?
 0000001C 00000000		Max				DWORD	?

				;String Prompts
 00000020 45 6E 74 65 72	strHR0			BYTE 	"Enter Heart Rate HR0: ",0
	   20 48 65 61 72
	   74 20 52 61 74
	   65 20 48 52 30
	   3A 20 00
 00000037 45 6E 74 65 72	strHR1			BYTE 	"Enter Heart Rate HR1: ",0
	   20 48 65 61 72
	   74 20 52 61 74
	   65 20 48 52 31
	   3A 20 00
 0000004E 45 6E 74 65 72	strHR2			BYTE 	"Enter Heart Rate HR2: ",0
	   20 48 65 61 72
	   74 20 52 61 74
	   65 20 48 52 32
	   3A 20 00
 00000065 45 6E 74 65 72	strHR3			BYTE 	"Enter Heart Rate HR3: ",0
	   20 48 65 61 72
	   74 20 52 61 74
	   65 20 48 52 33
	   3A 20 00
 0000007C 45 6E 74 65 72	strHR4			BYTE 	"Enter Heart Rate HR4: ",0
	   20 48 65 61 72
	   74 20 52 61 74
	   65 20 48 52 34
	   3A 20 00
 00000093 41 76 65 72 61	strAvg			BYTE	"Average Heart Rate: ",0
	   67 65 20 48 65
	   61 72 74 20 52
	   61 74 65 3A 20
	   00
 000000A8 52 6F 75 6E 64	strRAvg			BYTE	"Rounded Heart Average: ",0
	   65 64 20 48 65
	   61 72 74 20 41
	   76 65 72 61 67
	   65 3A 20 00
 000000C0 4D 61 78 69 6D	strMax			BYTE	"Maximum Heart Rate: ",0
	   75 6D 20 48 65
	   61 72 74 20 52
	   61 74 65 3A 20
	   00
 000000D5 0A 00			strNL			BYTE	10,0
 000000D7 2E			strDot			BYTE	"."

				; The code section may contain multiple tags such as _start, which is the entry
				; point of this assembly program
 00000000			.CODE
 00000000			_start:
 00000000				; Most of your initial code will be under the _start tag.
					; The _start tag is just a memory address referenced by the Public indicator
					; highlighting which functions are available to calling functions.
					; _start gets called by the operating system to start this process.
					
					;User input for HR0
					INVOKE	OutputStr, ADDR strHR0
					INVOKE 	InputInt
 0000000F  A3 00000000 R		mov		HR0, eax

					;User input for HR1
					INVOKE	OutputStr, ADDR strHR1
					INVOKE 	InputInt
 00000023  A3 00000004 R		mov		HR1, eax

					;User input for HR2
					INVOKE	OutputStr, ADDR strHR2
					INVOKE 	InputInt
 00000037  A3 00000008 R		mov		HR2, eax

					;User input for HR3
					INVOKE	OutputStr, ADDR strHR3
					INVOKE 	InputInt
 0000004B  A3 0000000C R		mov		HR3, eax

					;User input for HR4
					INVOKE	OutputStr, ADDR strHR4
					INVOKE 	InputInt
 0000005F  A3 00000010 R		mov		HR4, eax

					;Calculating the Average Heart Rate
 00000064  A1 00000000 R		mov eax, HR0
 00000069  03 05 00000004 R		add eax, HR1
 0000006F  03 05 00000008 R		add eax, HR2
 00000075  03 05 0000000C R		add eax, HR3
 0000007B  03 05 00000010 R		add eax, HR4

 00000081  BB 00000005			mov ebx, 5
 00000086  99				cdq
 00000087  F7 F3			div ebx

 00000089  A3 00000014 R		mov Avg, eax

					;Calculating the Rounded Average Heart Rate
 0000008E  A1 00000000 R		mov eax, HR0
 00000093  03 05 00000004 R		add eax, HR1
 00000099  03 05 00000008 R		add eax, HR2
 0000009F  03 05 0000000C R		add eax, HR3
 000000A5  03 05 00000010 R		add eax, HR4

 000000AB  83 C0 02			add eax, 2	;This is for rounding off

 000000AE  BB 00000005			mov ebx, 5
 000000B3  99				cdq
 000000B4  F7 F3			div ebx

 000000B6  A3 00000018 R		mov RoundedAvg, eax

					;Finding the Maximum Heart Rate
 000000BB  A1 00000000 R		mov	eax, HR0
 000000C0  8B 1D 00000004 R		mov ebx, HR1
 000000C6  3B D8			cmp	ebx, eax
 000000C8  7E 02			jle	loop1
 000000CA  8B C3			mov eax, ebx
 000000CC			loop1:
 000000CC  8B 1D 00000008 R		mov ebx, HR2
 000000D2  3B D8			cmp	ebx, eax
 000000D4  7E 02			jle	loop2
 000000D6  8B C3			mov eax, ebx
 000000D8			loop2:
 000000D8  8B 1D 0000000C R		mov ebx, HR3
 000000DE  3B D8			cmp	ebx, eax
 000000E0  7E 02			jle loop3
 000000E2  8B C3			mov eax, ebx
 000000E4			loop3:
 000000E4  8B 1D 00000010 R		mov ebx, HR4
 000000EA  3B D8			cmp ebx, eax
 000000EC  7E 02			jle	loop4
 000000EE  8B C3			mov eax, ebx
 000000F0			loop4:
 000000F0  A3 0000001C R		mov Max, eax

					;Displaying the Average Heart Rate
					INVOKE	OutputStr, ADDR	strAvg
					INVOKE	OutputInt, Avg
					INVOKE	OutputStr, ADDR strNL

					;Displaying the Rounded Average Heart Rate
					INVOKE	OutputStr, ADDR	strRAvg
					INVOKE	OutputInt, RoundedAvg
					INVOKE	OutputStr, ADDR strNL

					;Displaying the Rounded Average Heart Rate
					INVOKE	OutputStr, ADDR	strMax
					INVOKE	OutputInt, Max
					INVOKE	OutputStr, ADDR strNL

					;To Loop back
 00000152  E9 FFFFFEA9			jmp _start

 00000157			endProg:
					; We call the Operating System ExitProcess system call to close the process.
					INVOKE ExitProcess, 0
 0000015E			Public _start
				END
Microsoft (R) Macro Assembler Version 6.11		    08/01/24 17:07:49
src\220138825_P02.asm					     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000000D8 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000015E DWord	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

$$$$$$00001  . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000015E Private
  loop1  . . . . . . . . . . . .	L Near	 000000CC _TEXT	
  loop2  . . . . . . . . . . . .	L Near	 000000D8 _TEXT	
  loop3  . . . . . . . . . . . .	L Near	 000000E4 _TEXT	
  loop4  . . . . . . . . . . . .	L Near	 000000F0 _TEXT	
  endProg  . . . . . . . . . . .	L Near	 00000157 _TEXT	
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
InputInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
InputStr . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OutputFloat8 . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OutputFloat  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OutputInt  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OutputStr  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
Avg  . . . . . . . . . . . . . .	DWord	 00000014 _DATA	
HR0  . . . . . . . . . . . . . .	DWord	 00000000 _DATA	
HR1  . . . . . . . . . . . . . .	DWord	 00000004 _DATA	
HR2  . . . . . . . . . . . . . .	DWord	 00000008 _DATA	
HR3  . . . . . . . . . . . . . .	DWord	 0000000C _DATA	
HR4  . . . . . . . . . . . . . .	DWord	 00000010 _DATA	
IO_INC . . . . . . . . . . . . .	Text   	 1
Max  . . . . . . . . . . . . . .	DWord	 0000001C _DATA	
RoundedAvg . . . . . . . . . . .	DWord	 00000018 _DATA	
_start . . . . . . . . . . . . .	L Near	 00000000 _TEXT	Public
endProg  . . . . . . . . . . . .	L Near	 00000157 _TEXT	
loop1  . . . . . . . . . . . . .	L Near	 000000CC _TEXT	
loop2  . . . . . . . . . . . . .	L Near	 000000D8 _TEXT	
loop3  . . . . . . . . . . . . .	L Near	 000000E4 _TEXT	
loop4  . . . . . . . . . . . . .	L Near	 000000F0 _TEXT	
strAvg . . . . . . . . . . . . .	Byte	 00000093 _DATA	
strDot . . . . . . . . . . . . .	Byte	 000000D7 _DATA	
strHR0 . . . . . . . . . . . . .	Byte	 00000020 _DATA	
strHR1 . . . . . . . . . . . . .	Byte	 00000037 _DATA	
strHR2 . . . . . . . . . . . . .	Byte	 0000004E _DATA	
strHR3 . . . . . . . . . . . . .	Byte	 00000065 _DATA	
strHR4 . . . . . . . . . . . . .	Byte	 0000007C _DATA	
strMax . . . . . . . . . . . . .	Byte	 000000C0 _DATA	
strNL  . . . . . . . . . . . . .	Byte	 000000D5 _DATA	
strRAvg  . . . . . . . . . . . .	Byte	 000000A8 _DATA	

	   0 Warnings
	   0 Errors
