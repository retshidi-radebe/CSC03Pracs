Microsoft (R) Macro Assembler Version 6.11		    10/03/24 16:14:47
src\220138825_P08.asm					     Page 1 - 1


				;	Update all of this information to reflect your own details and the prac
				;	Author:     RE Radebe
				;	220138825	Practical Assessment 08
				.386
				.MODEL FLAT ; Flat memory model
				.STACK 4096 ; 4096 bytes
				INCLUDE io.inc
			      C ;
			      C ; Simple I/O Routines - Version 2
			      C ;
			      C 
			      C IFNDEF IO_INC
 = 1			      C IO_INC equ <1>
			      C 
			      C OutputStr PROTO NEAR32 STDCALL :DWORD
			      C OutputInt PROTO NEAR32 STDCALL :DWORD
			      C OutputFloat PROTO NEAR32 STDCALL :DWORD
			      C OutputFloat8 PROTO NEAR32 STDCALL :QWORD
			      C InputInt PROTO NEAR32 STDCALL
			      C InputStr PROTO NEAR32 STDCALL :DWORD, :DWORD
			      C 
			      C ELSE
			      C ENDIF
			      C 

				; Exit function
				ExitProcess PROTO NEAR32 stdcall, dwExitCode:DWORD

				; The data section stores all global variables
 00000000			.DATA

				;Global variables
 00000000  00000007 [			Rewards			DWORD	7 DUP(99, 80, 57, 0, 0, 0, 110)		; Rewards for 7 days
	    00000063
	    00000050
	    00000039
	    00000000
	    00000000
	    00000000
	    0000006E
	   ]
 000000C4 00000007			numDays			DWORD	7							; Number of days	
 000000C8 00000000			intResult		DWORD	?							; Store integer Ave
 000000CC 00000000			floatResult		REAL4	?							; Store float Ave

				; String Promps	
 000000D0 49 6E 74 65 67		StrIntAverage	BYTE	"Integer Average: ", 0
	   65 72 20 41 76
	   65 72 61 67 65
	   3A 20 00
 000000E2 46 6C 6F 61 74		StrFloatAverage	BYTE	"Floating Point Average: ", 0
	   69 6E 67 20 50
	   6F 69 6E 74 20
	   41 76 65 72 61
	   67 65 3A 20 00
 000000FB 0A 00				strNL			BYTE	10, 0
 000000FD 52 65 77 61 72		strRewards		BYTE	"Rewards for Fitness Goals: ", 0
	   64 73 20 66 6F
	   72 20 46 69 74
	   6E 65 73 73 20
	   47 6F 61 6C 73
	   3A 20 00

				; The code section may contain multiple tags such as _start, which is the entry
				; point of this assembly program
 00000000			.CODE

				;============================ Function to calculate integer average ============================
 00000000			calculateIntAverage PROC NEAR32

 00000000  8B 0D 000000C4 R		mov			ecx, numDays						; Load number of days into ecx
 00000006  B8 00000000			mov			eax, 0								; Clear eax 
 0000000B  BE 00000000			mov 		esi, 0								; Index for Rewards

 00000010			sumLoopInt:
 00000010  03 86 00000000 R		add			eax, Rewards[esi]					; Add rewards to sum
 00000016  83 C6 04			add			esi, 4								; Move to the next reward	
 00000019  E2 F5			loop		sumLoopInt

 0000001B  8B 1D 000000C4 R		mov			ebx, numDays						; Load number of days
 00000021  33 D2			xor			edx, edx							; Clear edx	
 00000023  F7 F3			div			ebx									; eac = sum / numDays
 00000025  A3 000000C8 R		mov			intResult, eax						; Store integer result in intResult

 0000002A  C3				ret

 0000002B			calculateIntAverage ENDP

				;============================ Function to calculate floating-point average =====================
 0000002B			calculateFloatAverage PROC NEAR32
 0000002B  9B DB E3			finit								; Initialize FPU
 0000002E  D9 EE			fldz								; Load 0.0 into FPU stack
 00000030  8B 0D 000000C4 R		mov 			ecx, numDays		; Load number of days into ecx
 00000036  BE 00000000			mov				esi, 0				; Index for Rewars

 0000003B			sumLoopFloat:
 0000003B  DB 86 00000000 R		fild			DWORD PTR Rewards[esi]	; Load each integer as float intp FPU
 00000041  DE C1			fadd									; Add the value to the FPU's sack
 00000043  83 C6 04			add				esi, 4
 00000046  E2 F3			loop			sumLoopFloat

 00000048  DB 05 000000C4 R		fild			DWORD PTR numDays		; Load numDays as integer in FPU
 0000004E  DE F9			fdiv									; Divide sum by numDays
 00000050  D9 1D 000000CC R		fstp			floatResult				; Store the result into floatResult

 00000056  C3				ret

 00000057			calculateFloatAverage ENDP

				;============================ Function to display rewards array =============================
 00000057			displayRewards PROC NEAR32

 00000057  8B 0D 000000C4 R		mov 			ecx, numDays
 0000005D  BE 00000000			mov				esi, 0

 00000062			displayLoop:
					INVOKE			OutputInt, Rewards[esi]		; Display each element in Rewards array
					INVOKE			OutputStr, ADDR strNL
 00000077  83 C6 04			add 			esi, 4
 0000007A  E2 E6			loop			displayLoop

 0000007C  C3				ret

 0000007D			displayRewards ENDP

				;============================ Main Program Entry ============================

 0000007D			_start:
					; Most of your initial code will be under the _start tag.
					; The _start tag is just a memory address referenced by the Public indicator
					; highlighting which functions are available to calling functions.
					; _start gets called by the operating system to start this process.
 0000007D			main PROC NEAR32

					INVOKE			OutputStr, ADDR strRewards
					INVOKE			OutputStr, ADDR strNL

					;Displaying the Rewards
 00000091  E8 FFFFFFC1			call			displayRewards

					;Calculating integer average
 00000096  E8 FFFFFF65			call			calculateIntAverage

					; Displaying integher average
					INVOKE			OutputStr, ADDR	StrIntAverage
					INVOKE			OutputInt, intResult
					INVOKE			OutputStr, ADDR strNL

					; Calculating floating point average
 000000BA  E8 FFFFFF6C			call			calculateFloatAverage

					; Displaying Floating point results
					INVOKE			OutputStr, ADDR StrFloatAverage
					INVOKE			OutputFloat, floatResult
					INVOKE			OutputStr, ADDR strNL
 000000DE			main ENDP
 000000DE				; We call the Operating System ExitProcess system call to close the process.
					INVOKE ExitProcess, 0
 000000E5			Public _start
				END
Microsoft (R) Macro Assembler Version 6.11		    10/03/24 16:14:47
src\220138825_P08.asm					     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000119 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000000E5 DWord	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

$$$$$$00005  . . . . . . . . . .	P Near	 000000DE _TEXT	Length= 00000007 Private
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
InputInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
InputStr . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OutputFloat8 . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OutputFloat  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OutputInt  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OutputStr  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
calculateFloatAverage  . . . . .	P Near	 0000002B _TEXT	Length= 0000002C Public
  sumLoopFloat . . . . . . . . .	L Near	 0000003B _TEXT	
calculateIntAverage  . . . . . .	P Near	 00000000 _TEXT	Length= 0000002B Public
  sumLoopInt . . . . . . . . . .	L Near	 00000010 _TEXT	
displayRewards . . . . . . . . .	P Near	 00000057 _TEXT	Length= 00000026 Public
  displayLoop  . . . . . . . . .	L Near	 00000062 _TEXT	
main . . . . . . . . . . . . . .	P Near	 0000007D _TEXT	Length= 00000061 Public


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
IO_INC . . . . . . . . . . . . .	Text   	 1
Rewards  . . . . . . . . . . . .	DWord	 00000000 _DATA	
StrFloatAverage  . . . . . . . .	Byte	 000000E2 _DATA	
StrIntAverage  . . . . . . . . .	Byte	 000000D0 _DATA	
_start . . . . . . . . . . . . .	L Near	 0000007D _TEXT	Public
floatResult  . . . . . . . . . .	DWord	 000000CC _DATA	
intResult  . . . . . . . . . . .	DWord	 000000C8 _DATA	
numDays  . . . . . . . . . . . .	DWord	 000000C4 _DATA	
strNL  . . . . . . . . . . . . .	Byte	 000000FB _DATA	
strRewards . . . . . . . . . . .	Byte	 000000FD _DATA	

	   0 Warnings
	   0 Errors
